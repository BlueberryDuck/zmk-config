/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        holdtap: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        holdtaplayer: holdtaplayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPLAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        mo_layer3_left {
            bindings = <&mo 3>;
            key-positions = <38 36>;
        };

        mo_layer3_right {
            bindings = <&mo 3>;
            key-positions = <39 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&holdtap ESCAPE TAB  &kp Q                &kp W                 &kp E      &kp R         &kp T    &kp Y              &kp U          &kp I      &kp O    &kp P          &kp LEFT_BRACKET
&kp LEFT_SHIFT       &kp A                &kp S                 &kp D      &kp F         &kp G    &kp H              &kp J          &kp K      &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LCTRL            &holdtap LEFT_ALT Z  &holdtap RIGHT_ALT X  &kp C      &kp V         &kp B    &kp N              &kp M          &kp COMMA  &kp DOT  &kp FSLH       &kp MINUS
                                                                &kp SPACE  &kp LEFT_GUI  &mo 1    &holdtaplayer 2 1  &kp BACKSPACE  &kp ENTER
            >;
        };

        layer_1 {
            bindings = <
&holdtap ESCAPE NUMBER_1  &kp NUMBER_2              &kp NUMBER_3                  &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp SLASH          &kp GRAVE
&trans                    &kp DELETE                &kp PAGE_UP                   &kp HOME        &kp UP_ARROW    &kp END            &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA     &kp PERIOD         &kp NON_US_BACKSLASH
&trans                    &holdtap LEFT_ALT INSERT  &holdtap RIGHT_ALT PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &kp RIGHT_BRACKET  &kp BACKSLASH
                                                                                  &trans          &trans          &to 0              &mo 2         &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7           &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp PRINTSCREEN  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAUSE_BREAK  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans    &trans           &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&soft_off     &none         &none         &none         &none  &none    &none  &none  &none  &none  &none  &soft_off
&bt BT_CLR    &none         &none         &none         &none  &none    &none  &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none  &none    &none  &none  &none  &none  &none  &none
                                          &none         &none  &none    &none  &none  &none
            >;
        };
    };
};
